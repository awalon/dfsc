name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable]
#        include:
#        - os: debian-latest
#          sccache-path: /home/runner/.cache/sccache
#        - os: macos-latest
#          sccache-path: /Users/runner/Library/Caches/Mozilla.sccache
        
    name: ${{ matrix.make.name }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    #runs-on: ubuntu-latest
    
    env:
      RUST_BACKTRACE: full
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
      RUSTV: ${{ matrix.rust }}
      #SCCACHE_CACHE_SIZE: 2G
      # SCCACHE_DIR: ${{ matrix.sccache-path }}
      # SCCACHE_RECACHE: 1 # Uncomment this to clear cache, then comment it back out
      
    steps:
    - name: Run sccache-cache
      uses: mozilla-actions/sccache-action@v0.0.3    
    - name: Run sccache stat for check
      shell: bash
      run: ${SCCACHE_PATH} --show-stats
    - uses: actions/checkout@v3
#    - name: Install sccache (debian-latest)
#      if: matrix.os == 'debian-latest'
#      env:
#        LINK: https://github.com/mozilla/sccache/releases/download
#        SCCACHE_VERSION: 0.2.13
#      run: |
#        SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
#        mkdir -p $HOME/.local/bin
#        curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
#        mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
#        echo "$HOME/.local/bin" >> $GITHUB_PATH          
#    - name: Install sccache (macos-latest)
#      if: matrix.os == 'macos-latest'
#      run: |
#        brew update
#        brew install sccache        
#    - name: Cache cargo registry
#      uses: actions/cache@v2
#      continue-on-error: false
#      with:
#        path: |
#          ~/.cargo/registry
#          ~/.cargo/git            
#        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
#        restore-keys: |
#                      ${{ runner.os }}-cargo-
#    - name: Save sccache
#      uses: actions/cache@v2
#      continue-on-error: false
#      with:
#        path: ${{ matrix.sccache-path }}
#        key: ${{ runner.os }}-sccache-${{ hashFiles('**/Cargo.lock') }}
#        restore-keys: |
#                      ${{ runner.os }}-sccache-
#    - name: Start sccache server
#      run: sccache --start-server
    #- name: ${{ matrix.make.name }}
    #  run: make ${{ matrix.make.task }}
    - name: Build
      run: cargo build --release --verbose
    #- name: Run tests
    #  run: cargo test --verbose
#    - name: Print sccache stats
#      run: sccache --show-stats
#    - name: Stop sccache server
#      run: sccache --stop-server || true
    - name: Archive production artifacts for ${{ matrix.os }}
      uses: actions/upload-artifact@v3
      with:
        name: dist-without-markdown
#          target/*/
        path: |
          target/**/dfsc*
          !target/**/*.md
#    - name: Archive code coverage results
#      uses: actions/upload-artifact@v3
#      with:
#        name: code-coverage-report
#        path: output/test/code-coverage.html
